these are some notes on the basic powershell -> C# ->Python stack\n
we are going to integrate the 3 in a system for automation of desktop tasks from a user point of view\nthe ultimate goal of this is to create a windows based automation stack in aid of game dev and other task\nPython .NET is an option for components that require fast interoperability on the C#side of things
\nwhile powershell and python can both be created and executed on the fly from strings made with any of the 3\n\ni am basically thinking of creating a looping mechinism that can run either compiled apps or python scripts on data sets on a variety of loops\nthink of it as an easy way to internaly create a semi interpreted control mechnisim\n\nfor the auto generated code, do we GPT?in the future maybe but I want to integrate a fourm of test driven development for all parts to adhere to\nthis way it will be easier to standardize behavior for corss implmentations of features of the core program\nthe core process will include a basic looping mechnism which can execute both time based commands and trigger based commands\nnote the trigger based commands would be scripts designed to fire on a directory for example, they would be executed by the scheduler\ntriggers would have similar problem to arma's scripts not being perfectly timed executions\nfunctions could be written in python or power shell and dynamically re-written\nmore complex behaviors could be encapsulated as a C# console style program to abstract away methods/steps or for reasons of performance
